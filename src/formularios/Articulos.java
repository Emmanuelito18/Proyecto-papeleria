/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import clases.ConectarBase;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author holas
 */
public class Articulos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Articulos
     */
    ConectarBase conexion=null;
    ResultSet markas=null;
    
    public Articulos() {
        initComponents();
        conexion= new ConectarBase();
        llenarComboMarcas();
    }

    private void llenaInfo(){
        try{
            String consulta="SELECT turno FROM grupos";
            PreparedStatement comando=(PreparedStatement)conexion.conectar.prepareStatement(consulta);
            markas=comando.executeQuery();
            while(markas.next()){
                cmbMarca.addItem(markas.getString(2));
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane,"Error al consultar las marcas de los artículos"+e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        herramientas = new javax.swing.JToolBar();
        nuevo = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        imprimir = new javax.swing.JButton();
        codigo = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        unidad = new javax.swing.JLabel();
        marca = new javax.swing.JLabel();
        precio = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        cmbUni = new javax.swing.JComboBox<>();
        cmbMarca = new javax.swing.JComboBox<>();
        txtMarca = new javax.swing.JTextField();
        lblCodigoMarca = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Catálogo de artículos");

        herramientas.setFloatable(false);
        herramientas.setRollover(true);

        nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        nuevo.setFocusable(false);
        nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        herramientas.add(nuevo);

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        guardar.setFocusable(false);
        guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        guardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        herramientas.add(guardar);

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buscar.png"))); // NOI18N
        buscar.setFocusable(false);
        buscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buscar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        herramientas.add(buscar);

        borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/borrar.png"))); // NOI18N
        borrar.setFocusable(false);
        borrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        borrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });
        herramientas.add(borrar);

        imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/imprimir.png"))); // NOI18N
        imprimir.setFocusable(false);
        imprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirActionPerformed(evt);
            }
        });
        herramientas.add(imprimir);

        codigo.setFont(new java.awt.Font("Lucida Handwriting", 0, 12)); // NOI18N
        codigo.setText("Código:");

        nombre.setFont(new java.awt.Font("Lucida Handwriting", 0, 12)); // NOI18N
        nombre.setText("Nombre:");

        unidad.setFont(new java.awt.Font("Lucida Handwriting", 0, 12)); // NOI18N
        unidad.setText("Unidad:");

        marca.setFont(new java.awt.Font("Lucida Handwriting", 0, 12)); // NOI18N
        marca.setText("Marca:");

        precio.setFont(new java.awt.Font("Lucida Handwriting", 0, 12)); // NOI18N
        precio.setText("Precio:");

        txtCodigo.setEnabled(false);

        txtNombre.setEnabled(false);

        txtPrecio.setEnabled(false);
        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        cmbUni.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pz", "Pq", "Gr", "Kg", "Ml", "Lt", "Cj" }));
        cmbUni.setEnabled(false);
        cmbUni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUniActionPerformed(evt);
            }
        });

        cmbMarca.setEnabled(false);
        cmbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarcaActionPerformed(evt);
            }
        });

        txtMarca.setEditable(false);
        txtMarca.setEnabled(false);

        lblCodigoMarca.setFont(new java.awt.Font("Lucida Handwriting", 0, 12)); // NOI18N
        lblCodigoMarca.setText("Código de la marca:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(herramientas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodigo))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombre))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(unidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbUni, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(marca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbMarca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(precio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addComponent(lblCodigoMarca)
                .addGap(18, 18, 18)
                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(herramientas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unidad)
                    .addComponent(cmbUni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marca)
                    .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCodigoMarca))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void cmbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarcaActionPerformed
        // TODO add your handling code here:
       try{
           markas.beforeFirst();
           while(markas.next()){
               if(cmbMarca.getSelectedItem().toString().matches(markas.getString(2))){
                   txtMarca.setText(markas.getString(1));
               }
           }
        int indice=cmbMarca.getSelectedIndex();
                markas.absolute(indice+1);
                txtMarca.setText(markas.getString(1));
                       }
       catch(SQLException e){
           JOptionPane.showMessageDialog(rootPane,"Error al obtener el código de la marca "+e);
       }
    try{
        String consulta="SELECT nombre_marca FROM marcas WHERE codigo_marca=?";
        PreparedStatement comando=(PreparedStatement)conexion.conectar.prepareStatement(consulta);
        comando.setString(1,cmbMarca.getSelectedItem().toString());
        ResultSet nomMarca=comando.executeQuery();
        if(nomMarca.next())txtMarca.setText(nomMarca.getString(1));
    }
    catch(SQLException e){
        JOptionPane.showMessageDialog(rootPane,"Error al obtener el código de la marca :'(");
    }
    }//GEN-LAST:event_cmbMarcaActionPerformed

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        // TODO add your handling code here:
        habilitarComponentes();
        limpiarComponentes();
    }//GEN-LAST:event_nuevoActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
        try{
            String insertar="INSERT INTO articulos VALUES(?,?,?,?,?)";
            PreparedStatement comando=(PreparedStatement)conexion.conectar.prepareStatement(insertar);
            comando.setString(1,txtCodigo.getText());
            comando.setString(2,txtNombre.getText());
            comando.setString(3,cmbUni.getSelectedItem().toString());
            comando.setString(4,txtPrecio.getText());
           /*comando.setString(5,txtMarca.getText());*/comando.setString(5,"25");
            comando.executeUpdate();
            JOptionPane.showMessageDialog(rootPane,"Artículo guardado con éxito");
            limpiarComponentes();
            deshabilitarComponentes();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane,"Error al guardar el artículo, verifique...");
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        try{
            limpiarComponentes();
            String art=JOptionPane.showInputDialog("Articulo a buscar");
            String consulta="SELECT * FROM articulos WHERE nombre_articulo LIKE ?";
            PreparedStatement comando=(PreparedStatement)conexion.conectar.prepareStatement(consulta);
            comando.setString(1,art);
            ResultSet registro=comando.executeQuery();
            if(registro.next()){
                txtCodigo.setText(registro.getString(1));
                txtNombre.setText(registro.getString(2));
                cmbUni.setSelectedItem(registro.getString(3));
                txtPrecio.setText(registro.getString(4));
                txtMarca.setText(registro.getString(5));
                markas.beforeFirst();
                        while(markas.next()){
                            if(registro.getString(5).matches(markas.getString(1))){
                                cmbMarca.setSelectedItem(markas.getString(2));
                                break;
                            }
                        }
                consulta="SELECT nombre_marca FROM marcas WHERE codigo_marca=?";
                comando=(PreparedStatement)conexion.conectar.prepareStatement(consulta);
                comando.setString(1,txtMarca.getText());
                ResultSet nomMarca=comando.executeQuery();
                if(nomMarca.next())cmbMarca.setSelectedItem(nomMarca.getString(1));
            }
            else{
                JOptionPane.showMessageDialog(rootPane,"Artículo inexistente...");
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane,"Error al efectuar la con consulta");
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        // TODO add your handling code here:
        try{
            if(txtCodigo.getText().isEmpty()){
                JOptionPane.showMessageDialog(rootPane,"Primero busque al atículo");
            }
            else{
                int resp=JOptionPane.showConfirmDialog(rootPane,"¿Estás segur@ que quieres borrar el artículo?","Borrar artículo",JOptionPane.YES_NO_OPTION);
                if(resp==0){
                String borrar="DELETE FROM articulos WHERE codigo=?";
                PreparedStatement comando=(PreparedStatement)conexion.conectar.prepareStatement(borrar);
                comando.setString(1,txtCodigo.getText());
                comando.executeUpdate();
                JOptionPane.showMessageDialog(rootPane,"Artículo borrado con éxito");
                limpiarComponentes();
                }
            }
            
        }
        catch(SQLException e){
        JOptionPane.showMessageDialog(rootPane,"Error al tratar de borrar al artículo");
    }
    }//GEN-LAST:event_borrarActionPerformed

    private void cmbUniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbUniActionPerformed

    private void imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imprimirActionPerformed

    private void habilitarComponentes(){
        txtCodigo.setEnabled(true); txtMarca.setEnabled(false);
        txtNombre.setEnabled(true); txtPrecio.setEnabled(true);
        cmbMarca.setEnabled(true); cmbUni.setEnabled(true);
        txtCodigo.grabFocus();
    }
    
private void deshabilitarComponentes(){
           txtCodigo.setEnabled(false); txtMarca.setEnabled(false);
        txtNombre.setEnabled(false); txtPrecio.setEnabled(false);
        cmbMarca.setEnabled(false); cmbUni.setEnabled(false); 
}

private void limpiarComponentes(){
    txtCodigo.setText(""); txtMarca.setText("");
    txtNombre.setText(""); txtPrecio.setText("");
    cmbMarca.setSelectedIndex(0); cmbUni.setSelectedIndex(0);
}
private void llenarComboMarcas(){
        try{
            String consulta="SELECT codigo_marca,nombre_marca FROM marcas";
            PreparedStatement comando=(PreparedStatement)conexion.conectar.prepareStatement(consulta);
            markas=comando.executeQuery();
            while(markas.next()){
                cmbMarca.addItem(markas.getString(2));
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(rootPane,"Error al consultar las marcas de los artículos"+e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrar;
    private javax.swing.JButton buscar;
    private javax.swing.JComboBox<String> cmbMarca;
    private javax.swing.JComboBox<String> cmbUni;
    private javax.swing.JLabel codigo;
    private javax.swing.JButton guardar;
    private javax.swing.JToolBar herramientas;
    private javax.swing.JButton imprimir;
    private javax.swing.JLabel lblCodigoMarca;
    private javax.swing.JLabel marca;
    private javax.swing.JLabel nombre;
    private javax.swing.JButton nuevo;
    private javax.swing.JLabel precio;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JLabel unidad;
    // End of variables declaration//GEN-END:variables
}
